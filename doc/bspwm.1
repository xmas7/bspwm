'\" t
.\"     Title: bspwm
.\"    Author: [see the "Author" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 12/22/2015
.\"    Manual: Bspwm Manual
.\"    Source: Bspwm 0.9-104-ge434521
.\"  Language: English
.\"
.TH "BSPWM" "1" "12/22/2015" "Bspwm 0\&.9\-104\-ge434521" "Bspwm Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
bspwm \- Binary space partitioning window manager
.SH "SYNOPSIS"
.sp
\fBbspwm\fR [\fB\-h\fR|\fB\-v\fR|\fB\-c\fR \fICONFIG_PATH\fR]
.sp
\fBbspc\fR \fIDOMAIN\fR [\fISELECTOR\fR] \fICOMMANDS\fR
.SH "DESCRIPTION"
.sp
\fBbspwm\fR is a tiling window manager that represents windows as the leaves of a full binary tree\&.
.sp
It is controlled and configured via \fBbspc\fR\&.
.SH "OPTIONS"
.PP
\fB\-h\fR
.RS 4
Print the synopsis and exit\&.
.RE
.PP
\fB\-v\fR
.RS 4
Print the version and exit\&.
.RE
.PP
\fB\-c\fR \fICONFIG_PATH\fR
.RS 4
Use the given configuration file\&.
.RE
.SH "COMMON DEFINITIONS"
.sp
.if n \{\
.RS 4
.\}
.nf
DIR         := north | west | south | east
CYCLE_DIR   := next | prev
.fi
.if n \{\
.RE
.\}
.SH "SELECTORS"
.sp
Selectors are used to select a target node, desktop, or monitor\&. A selector can either describe the target relatively or name it globally\&.
.sp
Selectors consist of a descriptor and any number of non\-conflicting modifiers as follows:
.sp
.if n \{\
.RS 4
.\}
.nf
DESCRIPTOR(\&.MODIFIER)*
.fi
.if n \{\
.RE
.\}
.sp
An exclamation mark can be prepended to certain modifiers in order to reverse their meaning\&.
.SS "Node"
.sp
Select a node\&.
.sp
.if n \{\
.RS 4
.\}
.nf
NODE_SEL := (<node_id>|PATH|DIR|CYCLE_DIR|last|older|newer|biggest|focused)[\&.[!]focused][\&.[!]automatic][\&.[!]local][\&.[!]leaf][\&.[!]STATE][\&.[!]FLAG][\&.[!]LAYER][\&.[!]same_class]

STATE := tiled|pseudo_tiled|floating|fullscreen

FLAG := urgent|sticky|private|locked

LAYER := below|normal|above

PATH := @[DESK_SEL:][[/]JUMP](/JUMP)*

JUMP := first|1|second|2|brother|parent|DIR
.fi
.if n \{\
.RE
.\}
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBDescriptors\fR
.RS 4
.PP
<node_id>
.RS 4
Selects the node with the given ID\&.
.RE
.PP
\fIPATH\fR
.RS 4
Selects the node at the given path\&.
.RE
.PP
\fIDIR\fR
.RS 4
Selects the window in the given (spacial) direction relative to the active node\&.
.RE
.PP
\fICYCLE_DIR\fR
.RS 4
Selects the window in the given (cyclic) direction\&.
.RE
.PP
biggest
.RS 4
Selects the biggest window on the current desktop\&.
.RE
.PP
last
.RS 4
Selects the previously focused node\&.
.RE
.PP
focused
.RS 4
Selects the currently focused node\&.
.RE
.PP
older
.RS 4
Selects the node older than the focused node in the history\&.
.RE
.PP
newer
.RS 4
Selects the node newer than the focused node in the history\&.
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBPath Jumps\fR
.RS 4
.sp
The initial node is the focused node (or the root if the path starts with \fI/\fR) of the focused desktop (or the selected desktop if the path has a \fIDESK_SEL\fR prefix)\&.
.PP
1|first
.RS 4
Jumps to the first child\&.
.RE
.PP
2|second
.RS 4
Jumps to the second child\&.
.RE
.PP
brother
.RS 4
Jumps to the brother node\&.
.RE
.PP
parent
.RS 4
Jumps to the parent node\&.
.RE
.PP
\fIDIR\fR
.RS 4
Jumps to the node holding the edge in the given direction\&.
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBModifiers\fR
.RS 4
.PP
[!]focused
.RS 4
Only consider focused or unfocused nodes\&.
.RE
.PP
[!]automatic
.RS 4
Only consider nodes in automatic or manual insertion mode\&.
.RE
.PP
[!]local
.RS 4
Only consider nodes in or not in the current desktop\&.
.RE
.PP
[!]leaf
.RS 4
Only consider leaves or internal nodes\&.
.RE
.PP
[!](tiled|pseudo_tiled|floating|fullscreen)
.RS 4
Only consider windows in or not in the given state\&.
.RE
.PP
[!]same_class
.RS 4
Only consider windows that have or don\(cqt have the same class as the current window\&.
.RE
.PP
[!](private|urgent|sticky|locked)
.RS 4
Only consider windows that have or don\(cqt have the given flag set\&.
.RE
.PP
[!](below|normal|above)
.RS 4
Only consider windows in or not in the given layer\&.
.RE
.RE
.SS "Desktop"
.sp
Select a desktop\&.
.sp
.if n \{\
.RS 4
.\}
.nf
DESKTOP_SEL := (<desktop_name>|[MONITOR_SEL:](focused|^<n>)CYCLE_DIR|last|older|newer)[\&.[!]occupied][\&.[!]focused][\&.[!]urgent][\&.[!]local]
.fi
.if n \{\
.RE
.\}
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBDescriptors\fR
.RS 4
.PP
<desktop_name>
.RS 4
Selects the desktop with the given name\&.
.RE
.PP
^<n>
.RS 4
Selects the nth desktop\&.
.RE
.PP
\fICYCLE_DIR\fR
.RS 4
Selects the desktop in the given direction relative to the active desktop\&.
.RE
.PP
last
.RS 4
Selects the previously focused desktop\&.
.RE
.PP
focused
.RS 4
Selects the currently focused desktop\&.
.RE
.PP
older
.RS 4
Selects the desktop older than the focused desktop in the history\&.
.RE
.PP
newer
.RS 4
Selects the desktop newer than the focused desktop in the history\&.
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBModifiers\fR
.RS 4
.PP
[!]occupied
.RS 4
Only consider occupied or free desktops\&.
.RE
.PP
[!]focused
.RS 4
Only consider focused or unfocused desktops\&.
.RE
.PP
[!]urgent
.RS 4
Only consider urgent or non urgent desktops\&.
.RE
.PP
[!]local
.RS 4
Only consider inside or outside of the current monitor\&.
.RE
.RE
.SS "Monitor"
.sp
Select a monitor\&.
.sp
.if n \{\
.RS 4
.\}
.nf
MONITOR_SEL := (<monitor_name>|^<n>|DIR|CYCLE_DIR|last|primary|focused|older|newer)[\&.[!]occupied][\&.[!]focused]
.fi
.if n \{\
.RE
.\}
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBDescriptors\fR
.RS 4
.PP
<monitor_name>
.RS 4
Selects the monitor with the given name\&.
.RE
.PP
^<n>
.RS 4
Selects the nth monitor\&.
.RE
.PP
\fIDIR\fR
.RS 4
Selects the monitor in the given (spacial) direction relative to the active monitor\&.
.RE
.PP
\fICYCLE_DIR\fR
.RS 4
Selects the monitor in the given (cyclic) direction relative to the active monitor\&.
.RE
.PP
primary
.RS 4
Selects the primary monitor\&.
.RE
.PP
last
.RS 4
Selects the previously focused monitor\&.
.RE
.PP
focused
.RS 4
Selects the currently focused monitor\&.
.RE
.PP
older
.RS 4
Selects the monitor older than the focused monitor in the history\&.
.RE
.PP
newer
.RS 4
Selects the monitor newer than the focused monitor in the history\&.
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBModifiers\fR
.RS 4
.PP
[!]occupied
.RS 4
Only consider monitors where the focused desktop is occupied or free\&.
.RE
.PP
[!]focused
.RS 4
Only consider focused or unfocused monitors\&.
.RE
.RE
.SH "WINDOW STATES"
.PP
tiled
.RS 4
Its size and position are determined by the splitting type and ratio of each node of its path in the window tree\&.
.RE
.PP
pseudo_tiled
.RS 4
Has an unrestricted size while being centered in its tiling space\&.
.RE
.PP
floating
.RS 4
Can be moved/resized freely\&. Although it doesn\(cqt occupy any tiling space, it is still part of the window tree\&.
.RE
.PP
fullscreen
.RS 4
Fills its monitor rectangle and has no borders\&. It is send in the ABOVE layer by default\&.
.RE
.SH "NODE FLAGS"
.PP
locked
.RS 4
Ignores the
\fBnode \-\-close\fR
message\&.
.RE
.PP
sticky
.RS 4
Stays in the focused desktop of its monitor\&.
.RE
.PP
private
.RS 4
Tries to keep the same tiling position/size\&.
.RE
.PP
urgent
.RS 4
Has its urgency hint set\&. This flag is set externally\&.
.RE
.SH "STACKING LAYERS"
.sp
There\(cqs three stacking layers: BELOW, NORMAL and ABOVE\&.
.sp
In each layer, the window are orderered as follow: tiled & pseudo\-tiled < fullscreen < floating\&.
.SH "DOMAINS"
.SS "Node"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBGeneral Syntax\fR
.RS 4
.sp
node [\fINODE_SEL\fR] \fICOMMANDS\fR
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBCommands\fR
.RS 4
.PP
\fB\-f\fR, \fB\-\-focus\fR [\fINODE_SEL\fR]
.RS 4
Focus the selected or given node\&.
.RE
.PP
\fB\-a\fR, \fB\-\-activate\fR [\fINODE_SEL\fR]
.RS 4
Activate the selected or given node\&.
.RE
.PP
\fB\-d\fR, \fB\-\-to\-desktop\fR \fIDESKTOP_SEL\fR
.RS 4
Send the selected node to the given desktop\&.
.RE
.PP
\fB\-m\fR, \fB\-\-to\-monitor\fR \fIMONITOR_SEL\fR
.RS 4
Send the selected node to the given monitor\&.
.RE
.PP
\fB\-n\fR, \fB\-\-to\-node\fR \fINODE_SEL\fR
.RS 4
Transplant the selected node to the given node\&.
.RE
.PP
\fB\-s\fR, \fB\-\-swap\fR \fINODE_SEL\fR
.RS 4
Swap the selected node with the given node\&.
.RE
.PP
\fB\-p\fR, \fB\-\-presel\-dir\fR \fIDIR\fR|cancel
.RS 4
Preselect the splitting area of the selected node (or cancel the preselection)\&.
.RE
.PP
\fB\-o\fR, \fB\-\-presel\-ratio\fR \fIRATIO\fR
.RS 4
Set the splitting ratio of the preselection area\&.
.RE
.PP
\fB\-r\fR, \fB\-\-ratio\fR \fIRATIO\fR|\(+-\fIPIXELS\fR
.RS 4
Set the splitting ratio of the selected node (0 <
\fIRATIO\fR
< 1)\&.
.RE
.PP
\fB\-R\fR, \fB\-\-rotate\fR \fI90|270|180\fR
.RS 4
Rotate the tree rooted at the selected node\&.
.RE
.PP
\fB\-F\fR, \fB\-\-flip\fR \fIhorizontal|vertical\fR
.RS 4
Flip the the tree rooted at selected node\&.
.RE
.PP
\fB\-E\fR, \fB\-\-equalize\fR
.RS 4
Reset the split ratios of the tree rooted at the selected node to their default value\&.
.RE
.PP
\fB\-B\fR, \fB\-\-balance\fR
.RS 4
Adjust the split ratios of the tree rooted at the selected node so that all windows occupy the same area\&.
.RE
.PP
\fB\-C\fR, \fB\-\-circulate\fR forward|backward
.RS 4
Circulate the windows of the tree rooted at the selected node\&.
.RE
.PP
\fB\-t\fR, \fB\-\-state\fR [~](tiled|pseudo_tiled|floating|fullscreen)
.RS 4
Set the state of the selected window\&.
.RE
.PP
\fB\-g\fR, \fB\-\-flag\fR locked|sticky|private[=on|off]
.RS 4
Set or toggle the given flag for the selected node\&.
.RE
.PP
\fB\-l\fR, \fB\-\-layer\fR below|normal|above
.RS 4
Set the stacking layer of the selected window\&.
.RE
.PP
\fB\-c\fR, \fB\-\-close\fR
.RS 4
Close the windows rooted at the selected node\&.
.RE
.PP
\fB\-k\fR, \fB\-\-kill\fR
.RS 4
Kill the windows rooted at the selected node\&.
.RE
.RE
.SS "Desktop"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBGeneral Syntax\fR
.RS 4
.sp
desktop [\fIDESKTOP_SEL\fR] \fICOMMANDS\fR
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBCOMMANDS\fR
.RS 4
.PP
\fB\-f\fR, \fB\-\-focus\fR [\fIDESKTOP_SEL\fR]
.RS 4
Focus the selected or given desktop\&.
.RE
.PP
\fB\-a\fR, \fB\-\-activate\fR [\fIDESKTOP_SEL\fR]
.RS 4
Activate the selected or given desktop\&.
.RE
.PP
\fB\-m\fR, \fB\-\-to\-monitor\fR \fIMONITOR_SEL\fR
.RS 4
Send the selected desktop to the given monitor\&.
.RE
.PP
\fB\-l\fR, \fB\-\-layout\fR \fICYCLE_DIR\fR|monocle|tiled
.RS 4
Set or cycle the layout of the selected desktop\&.
.RE
.PP
\fB\-n\fR, \fB\-\-rename\fR <new_name>
.RS 4
Rename the selected desktop\&.
.RE
.PP
\fB\-s\fR, \fB\-\-swap\fR \fIDESKTOP_SEL\fR
.RS 4
Swap the selected desktop with the given desktop\&.
.RE
.PP
\fB\-b\fR, \fB\-\-bubble\fR \fICYCLE_DIR\fR
.RS 4
Bubble the selected desktop in the given direction\&.
.RE
.PP
\fB\-r\fR, \fB\-\-remove\fR
.RS 4
Remove the selected desktop\&.
.RE
.RE
.SS "Monitor"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBGeneral Syntax\fR
.RS 4
.sp
monitor [\fIMONITOR_SEL\fR] \fICOMMANDS\fR
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBCommands\fR
.RS 4
.PP
\fB\-f\fR, \fB\-\-focus\fR [\fIMONITOR_SEL\fR]
.RS 4
Focus the selected or given monitor\&.
.RE
.PP
\fB\-a\fR, \fB\-\-add\-desktops\fR <name>\&...
.RS 4
Create desktops with the given names in the selected monitor\&.
.RE
.PP
\fB\-r\fR, \fB\-\-remove\-desktops\fR <name>\&...
.RS 4
Remove desktops with the given names\&.
.RE
.PP
\fB\-o\fR, \fB\-\-reorder\-desktops\fR <name>\&...
.RS 4
Reorder the desktops of the selected monitor to match the given order\&.
.RE
.PP
\fB\-d\fR, \fB\-\-reset\-desktops\fR <name>\&...
.RS 4
Rename, add or remove desktops depending on whether the number of given names is equal, superior or inferior to the number of existing desktops\&. Incidentally reset the settings of the existing desktops\&.
.RE
.PP
\fB\-n\fR, \fB\-\-rename\fR <new_name>
.RS 4
Rename the selected monitor\&.
.RE
.PP
\fB\-s\fR, \fB\-\-swap\fR \fIMONITOR_SEL\fR
.RS 4
Swap the selected monitor with the given monitor\&.
.RE
.RE
.SS "Query"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBGeneral Syntax\fR
.RS 4
.sp
query \fICOMMANDS\fR [\fIOPTIONS\fR]
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBCommands\fR
.RS 4
.PP
\fB\-N\fR, \fB\-\-nodes\fR
.RS 4
List the IDs of the matching nodes\&.
.RE
.PP
\fB\-D\fR, \fB\-\-desktops\fR
.RS 4
List the names of the matching desktops\&.
.RE
.PP
\fB\-M\fR, \fB\-\-monitors\fR
.RS 4
List the names of the matching monitors\&.
.RE
.PP
\fB\-T\fR, \fB\-\-tree\fR
.RS 4
Print a JSON representation of the matching item\&.
.RE
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBOptions\fR
.RS 4
.PP
[\fB\-m\fR,\fB\-\-monitor\fR [\fIMONITOR_SEL\fR]] | [\fB\-d\fR,\fB\-\-desktop\fR [\fIDESKTOP_SEL\fR]] | [\fB\-n\fR, \fB\-\-node\fR [\fINODE_SEL\fR]]
.RS 4
Constrain matches to the selected monitor, desktop or node\&. The descriptor can be omitted for
\fI\-M\fR,
\fI\-D\fR
and
\fI\-N\fR\&.
.RE
.RE
.SS "Wm"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBGeneral Syntax\fR
.RS 4
.sp
wm \fICOMMANDS\fR
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBCommands\fR
.RS 4
.PP
\fB\-d\fR, \fB\-\-dump\-state\fR
.RS 4
Dump the current world state on standard output\&.
.RE
.PP
\fB\-l\fR, \fB\-\-load\-state\fR <file_path>
.RS 4
Load a world state from the given file\&.
.RE
.PP
\fB\-a\fR, \fB\-\-add\-monitor\fR <name> WxH+X+Y
.RS 4
Add a monitor for the given name and rectangle\&.
.RE
.PP
\fB\-r\fR, \fB\-\-remove\-monitor\fR <name>
.RS 4
Remove the monitor with the given name\&.
.RE
.PP
\fB\-o\fR, \fB\-\-adopt\-orphans\fR
.RS 4
Manage all the unmanaged windows remaining from a previous session\&.
.RE
.PP
\fB\-h\fR, \fB\-\-record\-history\fR on|off
.RS 4
Enable or disable the recording of node focus history\&.
.RE
.PP
\fB\-g\fR, \fB\-\-get\-status\fR
.RS 4
Print the current status information\&.
.RE
.RE
.SS "Pointer"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBGeneral Syntax\fR
.RS 4
.sp
pointer \fICOMMANDS\fR
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBCommands\fR
.RS 4
.PP
\fB\-g\fR, \fB\-\-grab\fR focus|move|resize_side|resize_corner
.RS 4
Initiate the given pointer action\&.
.RE
.PP
\fB\-t\fR, \fB\-\-track\fR <x> <y>
.RS 4
Pass the pointer root coordinates for the current pointer action\&.
.RE
.PP
\fB\-u\fR, \fB\-\-ungrab\fR
.RS 4
Terminate the current pointer action\&.
.RE
.RE
.SS "Rule"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBGeneral Syntax\fR
.RS 4
.sp
rule \fICOMMANDS\fR
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBCommands\fR
.RS 4
.PP
\fB\-a\fR, \fB\-\-add\fR (<class_name>|\fB)[:(<instance_name>|\fR)] [\fB\-o\fR|\fB\-\-one\-shot\fR] [monitor=MONITOR_SEL|desktop=DESKTOP_SEL|node=NODE_SEL] [state=STATE] [layer=LAYER] [split_dir=DIR] [split_ratio=RATIO] [(locked|sticky|private|center|follow|manage|focus|border)=(on|off)]
.RS 4
Create a new rule\&.
.RE
.PP
\fB\-r\fR, \fB\-\-remove\fR ^<n>|head|tail|(<class_name>|\fB)[:(<instance_name>|\fR)]\&...
.RS 4
Remove the given rules\&.
.RE
.PP
\fB\-l\fR, \fB\-\-list\fR
.RS 4
List the rules\&.
.RE
.RE
.SS "Config"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBGeneral Syntax\fR
.RS 4
.PP
config [\-m \fIMONITOR_SEL\fR|\-d \fIDESKTOP_SEL\fR|\-n \fINODE_SEL\fR] <key> [<value>]
.RS 4
Get or set the value of <key>\&.
.RE
.RE
.SS "Subscribe"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBGeneral Syntax\fR
.RS 4
.PP
subscribe (all|report|monitor|desktop|window|\&...)*
.RS 4
Continuously print status information\&. See the
\fBEVENTS\fR
section for the detailed description of each event\&.
.RE
.RE
.SS "Quit"
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBGeneral Syntax\fR
.RS 4
.PP
quit [<status>]
.RS 4
Quit with an optional exit status\&.
.RE
.RE
.SH "EXIT CODES"
.sp
If the server can\(cqt handle a message, \fBbspc\fR will return with one of the following exit codes:
.PP
1
.RS 4
Failure\&.
.RE
.PP
2
.RS 4
Syntax error\&.
.RE
.PP
3
.RS 4
Unknown command\&.
.RE
.SH "SETTINGS"
.sp
Colors are in the form \fI#RRGGBB\fR, booleans are \fItrue\fR, \fIon\fR, \fIfalse\fR or \fIoff\fR\&.
.sp
All the boolean settings are \fIfalse\fR by default unless stated otherwise\&.
.SS "Global Settings"
.PP
\fInormal_border_color\fR
.RS 4
Color of the border of an unfocused window\&.
.RE
.PP
\fIactive_border_color\fR
.RS 4
Color of the border of a focused window of an unfocused monitor\&.
.RE
.PP
\fIfocused_border_color\fR
.RS 4
Color of the border of a focused window of a focused monitor\&.
.RE
.PP
\fIpresel_feedback_color\fR
.RS 4
Color of the
\fBnode \-\-presel\-{dir,ratio}\fR
message feedback area\&.
.RE
.PP
\fIsplit_ratio\fR
.RS 4
Default split ratio\&.
.RE
.PP
\fIstatus_prefix\fR
.RS 4
Prefix prepended to each of the status lines\&.
.RE
.PP
\fIexternal_rules_command\fR
.RS 4
External command used to retrieve rule consequences\&. The command will receive the the ID of the window being processed as its first argument and the class and instance names as second and third arguments\&. The output of that command must have the following format:
\fBkey1=value1 key2=value2 \&...\fR
(the valid key/value pairs are given in the description of the
\fIrule\fR
command)\&.
.RE
.PP
\fIinitial_polarity\fR
.RS 4
On which child should a new window be attached when adding a window on a single window tree in automatic mode\&. Accept the following values:
\fBfirst_child\fR,
\fBsecond_child\fR\&.
.RE
.PP
\fIhistory_aware_focus\fR
.RS 4
Give priority to the focus history when focusing nodes\&.
.RE
.PP
\fIfocus_by_distance\fR
.RS 4
Base focusing on distances between windows\&.
.RE
.PP
\fIborderless_monocle\fR
.RS 4
Remove borders of tiled windows for the
\fBmonocle\fR
desktop layout\&.
.RE
.PP
\fIgapless_monocle\fR
.RS 4
Remove gaps of tiled windows for the
\fBmonocle\fR
desktop layout\&.
.RE
.PP
\fIsingle_monocle\fR
.RS 4
Set the desktop layout to
\fBmonocle\fR
if there\(cqs only one tiled window in the tree\&.
.RE
.PP
\fIfocus_follows_pointer\fR
.RS 4
Focus the window under the pointer\&.
.RE
.PP
\fIpointer_follows_focus\fR
.RS 4
When focusing a window, put the pointer at its center\&.
.RE
.PP
\fIpointer_follows_monitor\fR
.RS 4
When focusing a monitor, put the pointer at its center\&.
.RE
.PP
\fIignore_ewmh_focus\fR
.RS 4
Ignore EWMH focus requests coming from applications\&.
.RE
.PP
\fIcenter_pseudo_tiled\fR
.RS 4
Center pseudo tiled windows into their tiling rectangles\&. Defaults to
\fItrue\fR\&.
.RE
.PP
\fIremove_disabled_monitors\fR
.RS 4
Consider disabled monitors as disconnected\&.
.RE
.PP
\fIremove_unplugged_monitors\fR
.RS 4
Remove unplugged monitors\&.
.RE
.PP
\fImerge_overlapping_monitors\fR
.RS 4
Merge overlapping monitors (the bigger remains)\&.
.RE
.SS "Monitor and Desktop Settings"
.PP
\fItop_padding\fR, \fIright_padding\fR, \fIbottom_padding\fR, \fIleft_padding\fR
.RS 4
Padding space added at the sides of the monitor or desktop\&.
.RE
.SS "Default, Desktop Default and Window Settings"
.PP
\fIborder_width\fR
.RS 4
Window border width\&.
.RE
.SS "Default and Desktop Settings"
.PP
\fIwindow_gap\fR
.RS 4
Size of the gap that separates windows\&.
.RE
.SH "EVENTS"
.PP
\fIreport\fR
.RS 4
See the next section for the description of the format\&.
.RE
.PP
\fImonitor_add <monitor_name> <monitor_id> <monitor_geometry>\fR
.RS 4
A monitor is added\&.
.RE
.PP
\fImonitor_rename <old_name> <new_name>\fR
.RS 4
A monitor is renamed\&.
.RE
.PP
\fImonitor_remove <monitor_name>\fR
.RS 4
A monitor is removed\&.
.RE
.PP
\fImonitor_focus <monitor_name>\fR
.RS 4
A monitor is focused\&.
.RE
.PP
\fImonitor_geometry <monitor_name> <monitor_geometry>\fR
.RS 4
The geometry of a monitor changed\&.
.RE
.PP
\fIdesktop_add <monitor_name> <desktop_name>\fR
.RS 4
A desktop is added\&.
.RE
.PP
\fIdesktop_rename <monitor_name> <old_name> <new_name>\fR
.RS 4
A desktop is renamed\&.
.RE
.PP
\fIdesktop_remove <monitor_name> <desktop_name>\fR
.RS 4
A desktop is removed\&.
.RE
.PP
\fIdesktop_swap <src_monitor_name> <src_desktop_name> <dst_monitor_name> <dst_desktop_name>\fR
.RS 4
A desktop is swapped\&.
.RE
.PP
\fIdesktop_transfer <src_monitor_name> <src_desktop_name> <dst_monitor_name>\fR
.RS 4
A desktop is transferred\&.
.RE
.PP
\fIdesktop_focus <monitor_name> <desktop_name>\fR
.RS 4
A desktop is focused\&.
.RE
.PP
\fIdesktop_activate <monitor_name> <desktop_name>\fR
.RS 4
A desktop is activated\&.
.RE
.PP
\fIdesktop_layout <monitor_name> <desktop_name> tiled|monocle\fR
.RS 4
The layout of a desktop changed\&.
.RE
.PP
\fInode_manage <monitor_name> <desktop_name> <node_id> <ip_id>\fR
.RS 4
A window is managed\&.
.RE
.PP
\fInode_unmanage <monitor_name> <desktop_name> <node_id>\fR
.RS 4
A window is unmanaged\&.
.RE
.PP
\fInode_swap <src_monitor_name> <src_desktop_name> <src_node_id> <dst_monitor_name> <dst_desktop_name> <dst_node_id>\fR
.RS 4
A node is swapped\&.
.RE
.PP
\fInode_transfer <src_monitor_name> <src_desktop_name> <src_node_id> <dst_monitor_name> <dst_desktop_name> <dst_node_id>\fR
.RS 4
A node is transferred\&.
.RE
.PP
\fInode_focus <monitor_name> <desktop_name> <node_id>\fR
.RS 4
A node is focused\&.
.RE
.PP
\fInode_activate <monitor_name> <desktop_name> <node_id>\fR
.RS 4
A node is activated\&.
.RE
.PP
\fInode_presel <monitor_name> <desktop_name> <node_id> (dir DIR|ratio RATIO|cancel)\fR
.RS 4
A node is preselected\&.
.RE
.PP
\fInode_stack <node_id_1> below|above <node_id_2>\fR
.RS 4
A node is stacked below or above another node\&.
.RE
.PP
\fInode_geometry <monitor_name> <desktop_name> <node_id> <node_geometry>\fR
.RS 4
The geometry of a window changed\&.
.RE
.PP
\fInode_state <monitor_name> <desktop_name> <node_id> tiled|pseudo_tiled|floating|fullscreen on|off\fR
.RS 4
The state of a window changed\&.
.RE
.PP
\fInode_flag <monitor_name> <desktop_name> <node_id> sticky|private|locked|urgent on|off\fR
.RS 4
One of the flags of a node changed\&.
.RE
.PP
\fInode_layer <monitor_name> <desktop_name> <node_id> below|normal|above\fR
.RS 4
The layer of a window changed\&.
.RE
.sp
Please note that \fBbspwm\fR initializes monitors before it reads messages on its socket, therefore the initial monitor events can\(cqt be received\&.
.SH "REPORT FORMAT"
.sp
Each report event message is composed of items separated by colons\&.
.sp
Each item has the form \fI<type><value>\fR where \fI<type>\fR is the first character of the item\&.
.PP
\fIM<monitor_name>\fR
.RS 4
Focused monitor\&.
.RE
.PP
\fIm<monitor_name>\fR
.RS 4
Unfocused monitor\&.
.RE
.PP
\fIO<desktop_name>\fR
.RS 4
Occupied focused desktop\&.
.RE
.PP
\fIo<desktop_name>\fR
.RS 4
Occupied unfocused desktop\&.
.RE
.PP
\fIF<desktop_name>\fR
.RS 4
Free focused desktop\&.
.RE
.PP
\fIf<desktop_name>\fR
.RS 4
Free unfocused desktop\&.
.RE
.PP
\fIU<desktop_name>\fR
.RS 4
Urgent focused desktop\&.
.RE
.PP
\fIu<desktop_name>\fR
.RS 4
Urgent unfocused desktop\&.
.RE
.PP
\fIL(T|M)\fR
.RS 4
Layout of the focused desktop of a monitor\&.
.RE
.PP
\fIT(T|P|F|=|@)\fR
.RS 4
State of the focused node of a focused desktop\&.
.RE
.PP
\fIG(S?P?L?)\fR
.RS 4
Active flags of the focused node of a focused desktop\&.
.RE
.SH "ENVIRONMENT VARIABLES"
.PP
\fIBSPWM_SOCKET\fR
.RS 4
The path of the socket used for the communication between
\fBbspc\fR
and
\fBbspwm\fR\&. If it isn\(cqt defined, then the following path is used:
\fI/tmp/bspwm<host_name>_<display_number>_<screen_number>\-socket\fR\&.
.RE
.SH "CONTRIBUTORS"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Steven Allen <steven at stebalien\&.com>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Thomas Adam <thomas at xteddy\&.org>
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Ivan Kanakarakis <ivan\&.kanak at gmail\&.com>
.RE
.SH "AUTHOR"
.sp
Bastien Dejean <nihilhill at gmail\&.com>
